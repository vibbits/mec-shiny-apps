linetype=circlelinetypes[4])+
geom_bar(stat = "identity", position = "fill",alpha=alpha)
}
#add name of compound if desired, and the assign colors and their legend order
if (include_name) plotrect<-plotrect+ggtitle(compound)
plotrect<-plotrect  +
scale_fill_manual(values=col_labeling,guide=guide_legend(reverse=T))
#positions of text at specified locations. GGrepel used when multiple tracer
# to avoid labels overlapping. Fontsize needs to be adjusted for reasons:
#https://stackoverflow.com/questions/25061822/ggplot-geom-text-font-size-control
if (show_P) {
plotrect<-plotrect  +
geom_text(aes(label=P.RAlab),x=1.6,y=7/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward")
if (length(unique(pull(slice_tb[,tracer_column])))>2) {
plotrect<-plotrect  +
geom_text_repel(data=lab_tb,
aes(label=paste0(labFC,P.FClab)),
x = lab_tb$FClab_posDist,y=lab_tb$FClab_posAngle,
size=otherfontsize*5/14, family=font,
point.size=NA,direction = "x")
} else {
plotrect<-plotrect  +
geom_text(aes(label=labFC),x = slice_tb$FClab_posDist,
y=slice_tb$FClab_posAngle,size=otherfontsize*5/14, family=font)+
geom_text(aes(label=P.FClab),x=1.6,y=5/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward",family=font)
}
} else {
if (length(unique(pull(slice_tb[,tracer_column])))>2) {
plotrect<-plotrect  +
geom_text_repel(data=lab_tb,
aes(label=paste0(labFC)),
x = lab_tb$FClab_posDist,y=lab_tb$FClab_posAngle,
size=otherfontsize*5/14, family=font,
point.size=NA,direction = "x")
} else {
plotrect<-plotrect  +
geom_text(aes(label=labFC),x = slice_tb$FClab_posDist,
y=slice_tb$FClab_posAngle,size=otherfontsize*5/14, family=font)+
geom_text(aes(label=P.FClab),x=1.6,y=5/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward",family=font)
}
}
#transform bar to pie chart and plot pies on grid, depending on amount of
#factors.
if(length(fact_name)!=2) {
piebasic<-plotrect+
facet_wrap(vars(!!rlang::sym(fact_name)),ncol=maxcol_facet) +
coord_polar("y", start = 0, direction = 1)
} else {
gridformula<-as.formula(paste0(fact_name[2],"~",fact_name[1]))
#switch="both" to set labels to same side as axis titles
piebasic<-plotrect+
facet_grid(gridformula,switch="both") +
coord_polar("y", start = 0, direction = 1)
}
#apply final formatting to pie plots. Removes x and y labels entirely,
#including the space reserved for them on the plot
#sets relative abundance p values in upper right corner of pie plots
pies<-piebasic +
labs(x=NULL, y=NULL)+
#Change plots to black on white, remove text axes (fraction) that interfere
#with circles, axis ticks, fraction grid lines. Set text font,
#set legend title size,
#remove rectangles and background around factor levels, set factor levels
#to right text size
theme_bw(base_size = otherfontsize) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
text=element_text(family = font),
plot.title = element_text(size = cohortsize, face = "bold"),
legend.title = element_text(size = legendtitlesize),
strip.background = element_rect(fill = NA, colour = NA),
strip.text = element_text(size = cohortsize))
#removes legend if desired
if (!include_legend) pies <-pies + theme(legend.position = "none")
return(pies)
}
#generate figures per compound with specified settings and save if requested
generate_multiple_pies(tb,compounds=compounds_updated,
detail_charts=detail_charts,
pathway_charts=pathway_charts,
savepath=savepath,
normalize=normalize,
fact_name=factor_column,
tracer_column=tracer_column,
fact_order=fact_order,
P_isotopologues=P_isotopologues,
log_abund=log_abund,
label_decimals=labelDecimals,
percent_add=percentAdd,
FC_position=FCposition,
min_lab_dist=minLabDist,
circlelinecolor=circlelinecolor,
circlelinetypes=circlelinetypes,
maxcol_facet=maxcol_facet,
include_name=include_name,
show_P=show_P,
col_labeling=colLabeling,
alpha=alpha,
otherfontsize=otherfontsize,
font=font,
legendtitlesize=legendtitlesize,
cohortsize=cohortsize,
include_legend=include_legend,
format=format,
mapotherfontsize=mapotherfontsize,
mapcohortsize=mapcohortsize)
debug(make_piechart)
#generate figures per compound with specified settings and save if requested
generate_multiple_pies(tb,compounds=compounds_updated,
detail_charts=detail_charts,
pathway_charts=pathway_charts,
savepath=savepath,
normalize=normalize,
fact_name=factor_column,
tracer_column=tracer_column,
fact_order=fact_order,
P_isotopologues=P_isotopologues,
log_abund=log_abund,
label_decimals=labelDecimals,
percent_add=percentAdd,
FC_position=FCposition,
min_lab_dist=minLabDist,
circlelinecolor=circlelinecolor,
circlelinetypes=circlelinetypes,
maxcol_facet=maxcol_facet,
include_name=include_name,
show_P=show_P,
col_labeling=colLabeling,
alpha=alpha,
otherfontsize=otherfontsize,
font=font,
legendtitlesize=legendtitlesize,
cohortsize=cohortsize,
include_legend=include_legend,
format=format,
mapotherfontsize=mapotherfontsize,
mapcohortsize=mapcohortsize)
View(slice_tb)
make_piechart<-function(slice_tb,compound,tracer_column=tracer_column,
fact_name=fact_name,log_abund=F,
circlelinecolor="gray",maxcol_facet=4,
circlelinetypes=c(1,1,1,1),
include_name=F,col_labeling=c("#bfbfbf","#ffd966"),
alpha=0.7,
otherfontsize=10,font="sans",legendtitlesize=10,
cohortsize=12,include_legend=T,show_P=T){
tracer_symbol <- rlang::sym(tracer_column)
#make reduced tibble for labels and invert labeling for multitracer
lab_tb<-slice_tb
# %>%
#   filter(!!tracer_symbol!="Unlabeled")
#create starting barplot. X= halved abundances required, take log if requested
#Adds gridlines that will become reference circles at 0.25 0.5 0.75 and 1 on
#normal scale or 0.001 0.01 0.1 and 1 on log scale.
if (log_abund) {
#set minimal value to include on log axis, changing not recommended
#and calculate minimal position distance on new scale
minvalue<-0.0001
#width can only be symmetric, so modify abundance to the value on normal
#scale corresponding to average of log scale minimal limit
#and logscale abundance, and abundance width to the difference of the log
#scale abundance and log scale minimal limit
slice_tb <- slice_tb %>%
rowwise() %>%
mutate(modAbund=10^((log10(Abund)+log10(minvalue))/2),
modAbund_width=-(log10(minvalue)-log10(Abund)),
#reset label distance position to work on logscale, either to middle
#or to intended distance depending on whether one was given.
FClab_posDist=if_else(FClab_posDist>0,
log10(modAbund),
log10(minvalue)))
plotrect<-slice_tb %>% ggplot(aes(x = modAbund, y = Fraction,
fill = !!tracer_symbol,
width = modAbund_width)) +
scale_x_log10(limits= c(minvalue, 1)) +
geom_vline(xintercept=c(0.001),colour=circlelinecolor,
linetype=circlelinetypes[1])+
geom_vline(xintercept=c(0.01),colour=circlelinecolor,
linetype=circlelinetypes[2])+
geom_vline(xintercept=c(0.1),colour=circlelinecolor,
linetype=circlelinetypes[3])+
geom_vline(xintercept=c(1),colour=circlelinecolor,
linetype=circlelinetypes[4])+
geom_bar(stat = "identity", position = "fill",alpha=alpha)
} else {
plotrect<-slice_tb %>% ggplot(aes(x = Abund/2, y = Fraction,
fill = !!tracer_symbol,
width = Abund)) +
geom_vline(xintercept=c(0.25),colour=circlelinecolor,
linetype=circlelinetypes[1])+
geom_vline(xintercept=c(0.5),colour=circlelinecolor,
linetype=circlelinetypes[2])+
geom_vline(xintercept=c(0.75),colour=circlelinecolor,
linetype=circlelinetypes[3])+
geom_vline(xintercept=c(1),colour=circlelinecolor,
linetype=circlelinetypes[4])+
geom_bar(stat = "identity", position = "fill",alpha=alpha)
}
#add name of compound if desired, and the assign colors and their legend order
if (include_name) plotrect<-plotrect+ggtitle(compound)
plotrect<-plotrect  +
scale_fill_manual(values=col_labeling,guide=guide_legend(reverse=T))
#positions of text at specified locations. GGrepel used when multiple tracer
# to avoid labels overlapping. Fontsize needs to be adjusted for reasons:
#https://stackoverflow.com/questions/25061822/ggplot-geom-text-font-size-control
if (show_P) {
plotrect<-plotrect  +
geom_text(aes(label=P.RAlab),x=1.6,y=7/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward")
if (length(unique(pull(slice_tb[,tracer_column])))>2) {
plotrect<-plotrect  +
geom_text_repel(data=lab_tb,
aes(label=paste0(labFC,P.FClab)),
x = lab_tb$FClab_posDist,y=lab_tb$FClab_posAngle,
size=otherfontsize*5/14, family=font,
point.size=NA,direction = "x")
} else {
plotrect<-plotrect  +
geom_text(aes(label=labFC),x = slice_tb$FClab_posDist,
y=slice_tb$FClab_posAngle,size=otherfontsize*5/14, family=font)+
geom_text(aes(label=P.FClab),x=1.6,y=5/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward",family=font)
}
} else {
if (length(unique(pull(slice_tb[,tracer_column])))>2) {
plotrect<-plotrect  +
geom_text_repel(data=lab_tb,
aes(label=paste0(labFC)),
x = lab_tb$FClab_posDist,y=lab_tb$FClab_posAngle,
size=otherfontsize*5/14, family=font,
point.size=NA,direction = "x")
} else {
plotrect<-plotrect  +
geom_text(aes(label=labFC),x = slice_tb$FClab_posDist,
y=slice_tb$FClab_posAngle,size=otherfontsize*5/14, family=font)+
geom_text(aes(label=P.FClab),x=1.6,y=5/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward",family=font)
}
}
#transform bar to pie chart and plot pies on grid, depending on amount of
#factors.
if(length(fact_name)!=2) {
piebasic<-plotrect+
facet_wrap(vars(!!rlang::sym(fact_name)),ncol=maxcol_facet) +
coord_polar("y", start = 0, direction = 1)
} else {
gridformula<-as.formula(paste0(fact_name[2],"~",fact_name[1]))
#switch="both" to set labels to same side as axis titles
piebasic<-plotrect+
facet_grid(gridformula,switch="both") +
coord_polar("y", start = 0, direction = 1)
}
#apply final formatting to pie plots. Removes x and y labels entirely,
#including the space reserved for them on the plot
#sets relative abundance p values in upper right corner of pie plots
pies<-piebasic +
labs(x=NULL, y=NULL)+
#Change plots to black on white, remove text axes (fraction) that interfere
#with circles, axis ticks, fraction grid lines. Set text font,
#set legend title size,
#remove rectangles and background around factor levels, set factor levels
#to right text size
theme_bw(base_size = otherfontsize) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
text=element_text(family = font),
plot.title = element_text(size = cohortsize, face = "bold"),
legend.title = element_text(size = legendtitlesize),
strip.background = element_rect(fill = NA, colour = NA),
strip.text = element_text(size = cohortsize))
#removes legend if desired
if (!include_legend) pies <-pies + theme(legend.position = "none")
return(pies)
}
debug(make_piechart)
#generate figures per compound with specified settings and save if requested
generate_multiple_pies(tb,compounds=compounds_updated,
detail_charts=detail_charts,
pathway_charts=pathway_charts,
savepath=savepath,
normalize=normalize,
fact_name=factor_column,
tracer_column=tracer_column,
fact_order=fact_order,
P_isotopologues=P_isotopologues,
log_abund=log_abund,
label_decimals=labelDecimals,
percent_add=percentAdd,
FC_position=FCposition,
min_lab_dist=minLabDist,
circlelinecolor=circlelinecolor,
circlelinetypes=circlelinetypes,
maxcol_facet=maxcol_facet,
include_name=include_name,
show_P=show_P,
col_labeling=colLabeling,
alpha=alpha,
otherfontsize=otherfontsize,
font=font,
legendtitlesize=legendtitlesize,
cohortsize=cohortsize,
include_legend=include_legend,
format=format,
mapotherfontsize=mapotherfontsize,
mapcohortsize=mapcohortsize)
View(slice_tb)
slice_tb$FClab_posAngle<-1-slice_tb$FClab_posAngle
c
make_piechart<-function(slice_tb,compound,tracer_column=tracer_column,
fact_name=fact_name,log_abund=F,
circlelinecolor="gray",maxcol_facet=4,
circlelinetypes=c(1,1,1,1),
include_name=F,col_labeling=c("#bfbfbf","#ffd966"),
alpha=0.7,
otherfontsize=10,font="sans",legendtitlesize=10,
cohortsize=12,include_legend=T,show_P=T){
tracer_symbol <- rlang::sym(tracer_column)
#make reduced tibble for labels and invert labeling for multitracer
slice_tb$FClab_posAngle<-1-slice_tb$FClab_posAngle
lab_tb<-slice_tb
# %>%
#   filter(!!tracer_symbol!="Unlabeled")
#create starting barplot. X= halved abundances required, take log if requested
#Adds gridlines that will become reference circles at 0.25 0.5 0.75 and 1 on
#normal scale or 0.001 0.01 0.1 and 1 on log scale.
if (log_abund) {
#set minimal value to include on log axis, changing not recommended
#and calculate minimal position distance on new scale
minvalue<-0.0001
#width can only be symmetric, so modify abundance to the value on normal
#scale corresponding to average of log scale minimal limit
#and logscale abundance, and abundance width to the difference of the log
#scale abundance and log scale minimal limit
slice_tb <- slice_tb %>%
rowwise() %>%
mutate(modAbund=10^((log10(Abund)+log10(minvalue))/2),
modAbund_width=-(log10(minvalue)-log10(Abund)),
#reset label distance position to work on logscale, either to middle
#or to intended distance depending on whether one was given.
FClab_posDist=if_else(FClab_posDist>0,
log10(modAbund),
log10(minvalue)))
plotrect<-slice_tb %>% ggplot(aes(x = modAbund, y = Fraction,
fill = !!tracer_symbol,
width = modAbund_width)) +
scale_x_log10(limits= c(minvalue, 1)) +
geom_vline(xintercept=c(0.001),colour=circlelinecolor,
linetype=circlelinetypes[1])+
geom_vline(xintercept=c(0.01),colour=circlelinecolor,
linetype=circlelinetypes[2])+
geom_vline(xintercept=c(0.1),colour=circlelinecolor,
linetype=circlelinetypes[3])+
geom_vline(xintercept=c(1),colour=circlelinecolor,
linetype=circlelinetypes[4])+
geom_bar(stat = "identity", position = "fill",alpha=alpha)
} else {
plotrect<-slice_tb %>% ggplot(aes(x = Abund/2, y = Fraction,
fill = !!tracer_symbol,
width = Abund)) +
geom_vline(xintercept=c(0.25),colour=circlelinecolor,
linetype=circlelinetypes[1])+
geom_vline(xintercept=c(0.5),colour=circlelinecolor,
linetype=circlelinetypes[2])+
geom_vline(xintercept=c(0.75),colour=circlelinecolor,
linetype=circlelinetypes[3])+
geom_vline(xintercept=c(1),colour=circlelinecolor,
linetype=circlelinetypes[4])+
geom_bar(stat = "identity", position = "fill",alpha=alpha)
}
#add name of compound if desired, and the assign colors and their legend order
if (include_name) plotrect<-plotrect+ggtitle(compound)
plotrect<-plotrect  +
scale_fill_manual(values=col_labeling,guide=guide_legend(reverse=T))
#positions of text at specified locations. GGrepel used when multiple tracer
# to avoid labels overlapping. Fontsize needs to be adjusted for reasons:
#https://stackoverflow.com/questions/25061822/ggplot-geom-text-font-size-control
if (show_P) {
plotrect<-plotrect  +
geom_text(aes(label=P.RAlab),x=1.6,y=7/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward")
if (length(unique(pull(slice_tb[,tracer_column])))>2) {
plotrect<-plotrect  +
geom_text_repel(data=lab_tb,
aes(label=paste0(labFC,P.FClab)),
x = lab_tb$FClab_posDist,y=lab_tb$FClab_posAngle,
size=otherfontsize*5/14, family=font,
point.size=NA,direction = "x")
} else {
plotrect<-plotrect  +
geom_text(aes(label=labFC),x = slice_tb$FClab_posDist,
y=slice_tb$FClab_posAngle,size=otherfontsize*5/14, family=font)+
geom_text(aes(label=P.FClab),x=1.6,y=5/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward",family=font)
}
} else {
if (length(unique(pull(slice_tb[,tracer_column])))>2) {
plotrect<-plotrect  +
geom_text_repel(data=lab_tb,
aes(label=paste0(labFC)),
x = lab_tb$FClab_posDist,y=lab_tb$FClab_posAngle,
size=otherfontsize*5/14, family=font,
point.size=NA,direction = "x")
} else {
plotrect<-plotrect  +
geom_text(aes(label=labFC),x = slice_tb$FClab_posDist,
y=slice_tb$FClab_posAngle,size=otherfontsize*5/14, family=font)+
geom_text(aes(label=P.FClab),x=1.6,y=5/8,size=otherfontsize*5/14,
hjust="inward",vjust="inward",family=font)
}
}
#transform bar to pie chart and plot pies on grid, depending on amount of
#factors.
if(length(fact_name)!=2) {
piebasic<-plotrect+
facet_wrap(vars(!!rlang::sym(fact_name)),ncol=maxcol_facet) +
coord_polar("y", start = 0, direction = 1)
} else {
gridformula<-as.formula(paste0(fact_name[2],"~",fact_name[1]))
#switch="both" to set labels to same side as axis titles
piebasic<-plotrect+
facet_grid(gridformula,switch="both") +
coord_polar("y", start = 0, direction = 1)
}
#apply final formatting to pie plots. Removes x and y labels entirely,
#including the space reserved for them on the plot
#sets relative abundance p values in upper right corner of pie plots
pies<-piebasic +
labs(x=NULL, y=NULL)+
#Change plots to black on white, remove text axes (fraction) that interfere
#with circles, axis ticks, fraction grid lines. Set text font,
#set legend title size,
#remove rectangles and background around factor levels, set factor levels
#to right text size
theme_bw(base_size = otherfontsize) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
text=element_text(family = font),
plot.title = element_text(size = cohortsize, face = "bold"),
legend.title = element_text(size = legendtitlesize),
strip.background = element_rect(fill = NA, colour = NA),
strip.text = element_text(size = cohortsize))
#removes legend if desired
if (!include_legend) pies <-pies + theme(legend.position = "none")
return(pies)
}
#generate figures per compound with specified settings and save if requested
generate_multiple_pies(tb,compounds=compounds_updated,
detail_charts=detail_charts,
pathway_charts=pathway_charts,
savepath=savepath,
normalize=normalize,
fact_name=factor_column,
tracer_column=tracer_column,
fact_order=fact_order,
P_isotopologues=P_isotopologues,
log_abund=log_abund,
label_decimals=labelDecimals,
percent_add=percentAdd,
FC_position=FCposition,
min_lab_dist=minLabDist,
circlelinecolor=circlelinecolor,
circlelinetypes=circlelinetypes,
maxcol_facet=maxcol_facet,
include_name=include_name,
show_P=show_P,
col_labeling=colLabeling,
alpha=alpha,
otherfontsize=otherfontsize,
font=font,
legendtitlesize=legendtitlesize,
cohortsize=cohortsize,
include_legend=include_legend,
format=format,
mapotherfontsize=mapotherfontsize,
mapcohortsize=mapcohortsize)
debug(prepare_slicedata)
#generate figures per compound with specified settings and save if requested
generate_multiple_pies(tb,compounds=compounds_updated,
detail_charts=detail_charts,
pathway_charts=pathway_charts,
savepath=savepath,
normalize=normalize,
fact_name=factor_column,
tracer_column=tracer_column,
fact_order=fact_order,
P_isotopologues=P_isotopologues,
log_abund=log_abund,
label_decimals=labelDecimals,
percent_add=percentAdd,
FC_position=FCposition,
min_lab_dist=minLabDist,
circlelinecolor=circlelinecolor,
circlelinetypes=circlelinetypes,
maxcol_facet=maxcol_facet,
include_name=include_name,
show_P=show_P,
col_labeling=colLabeling,
alpha=alpha,
otherfontsize=otherfontsize,
font=font,
legendtitlesize=legendtitlesize,
cohortsize=cohortsize,
include_legend=include_legend,
format=format,
mapotherfontsize=mapotherfontsize,
mapcohortsize=mapcohortsize)
